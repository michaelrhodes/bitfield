var assert = console.assert
var bitfield = require('./index')

var field = bitfield(8)

assert(field.get(0) === false, 'get(0)')
assert(field.get(1) === false, 'get(1)')
assert(field.get(2) === false, 'get(2)')
assert(field.get(3) === false, 'get(3)')
assert(field.get(4) === false, 'get(4)')
assert(field.get(5) === false, 'get(5)')
assert(field.get(6) === false, 'get(6)')
assert(field.get(7) === false, 'get(7)')
assert(field.get(8) === false, 'get(8) ie. out of bounds')

field.set(0, 1), assert(field.get(0) === true, 'on(0)')
field.set(1, 1), assert(field.get(1) === true, 'on(1)')
field.set(2, 1), assert(field.get(2) === true, 'on(2)')
field.set(3, 1), assert(field.get(3) === true, 'on(3)')
field.set(4, 1), assert(field.get(4) === true, 'on(4)')
field.set(5, 1), assert(field.get(5) === true, 'on(5)')
field.set(6, 1), assert(field.get(6) === true, 'on(6)')
field.set(7, 1), assert(field.get(7) === true, 'on(7)')
field.set(8, 1), assert(field.get(8) === false, 'on(8) ie. out of bounds')

var ref = bitfield(field.buffer)
assert(ref.get(0) === field.get(0), 'eq(0)')
ref.set(0, 0), assert(field.get(0) === false, 'off(0)')

field.set(1, 0), assert(field.get(1) === false, 'off(1)')
field.set(2, 0), assert(field.get(2) === false, 'off(2)')
field.set(3, 0), assert(field.get(3) === false, 'off(3)')
field.set(4, 0), assert(field.get(4) === false, 'off(4)')
field.set(5, 0), assert(field.get(5) === false, 'off(5)')
field.set(6, 0), assert(field.get(6) === false, 'off(6)')
field.set(7, 0), assert(field.get(7) === false, 'off(7)')
field.set(8, 0), assert(field.get(8) === false, 'off(8) ie. out of bounds')

assert(bitfield(0).buffer.length === 0, 'length(0)')
assert(bitfield(1).buffer.length === 1, 'length(1)')
assert(bitfield(9).buffer.length === 2, 'length(9)')
assert(bitfield(17).buffer.length === 3, 'length(17)')
assert(bitfield(25).buffer.length === 4, 'length(25)')
assert(bitfield(33).buffer.length === 5, 'length(33)')
